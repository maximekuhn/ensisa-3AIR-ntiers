@page "/ajout-vip"
@using JeBalance.UI.Data.Services.SecreteAPI
@attribute [Authorize(Roles = "Administrateur")]
@inject AuthenticationStateProvider authStateProvider
@inject VIPServices Service
@inject IJSRuntime js
@inject NavigationManager NavigationManager

<div class="navbar">
    <ul class="ul-navbar">
        <li>
            <a id="home-link" class="active-green" href="/">
                <i class="fas fa-home"></i>
            </a>
        </li>
        <li>
            <a id="edit-link" href="get-all-vip">LISTE VIP</a>
        </li>
        <li>
            <a id="create-link" href="ajout-vip">AJOUTER UN VIP</a>
        </li>
        <li>
            <a id="logout-secrete-button" @onclick="Logout" class="nav-link">
                <i class="fas fa-sign-out-alt"></i>
            </a>
        </li>
        <p id="titleLogo"><span id="bleu">JeBalance</span><span id="gris">.gouv</span>.fr</p>
        <img id="logo" src="/favicon.ico" alt="Home"/>
    </ul>
</div>

<h2>Ajoutez un nouveau membre VIP</h2>

<EditForm Model="@vip" OnValidSubmit="FormSubmitted">
    <div class="inter">
        <h3 class="fom-title">Renseignements sur le VIP</h3>
        <hr>
        <div class="section">
            <!-- Informations du VIP -->
            <div class="form-group">
                <label for="nomVIP">Nom du VIP</label>
                <InputText class="form-control" id="nomVIP" @bind-Value="vip.Nom" placeholder="Exemple : Jackson"/>
            </div>
            <div class="form-group">
                <label for="prenomVIP">Prénom du VIP</label>
                <InputText class="form-control" id="prenomVIP" @bind-Value="vip.Prenom" placeholder="Exemple : Michael"/>
            </div>
        </div>
        <div class="section">
            <div class="form-group">
                <label for="numVoieVIP">Numéro de Voie du VIP</label>
                <InputNumber class="form-control" id="numVoieVIP" @bind-Value="vip.Adresse.NumeroVoie" min="0"/>
            </div>
            <div class="form-group">
                <label for="nomVoieVIP">Nom de Voie du VIP</label>
                <InputText class="form-control" id="nomVoieVIP" @bind-Value="vip.Adresse.NomVoie" placeholder="Exemple : Avenue de l'Europe"/>
            </div>
        </div>
        <div class="section">
            <div class="form-group">
                <label for="cpVIP">Code Postal du VIP</label>
                <InputNumber class="form-control" id="cpVIP" @bind-Value="vip.Adresse.CodePostal" placeholder="Exemple : 67000" min="0"/>
            </div>
            <div class="form-group">
                <label for="communeVIP">Commune du VIP</label>
                <InputText class="form-control" id="communeVIP" @bind-Value="vip.Adresse.NomCommune" placeholder="Exemple : Strasbourg"/>
            </div>
        </div>
    </div>

    <div class="button-container">
        <!-- Boutons -->
        <button type="submit">Ajouter</button>
    </div>
</EditForm>

@code {
    readonly VIPAPI vip = new();

    private async void FormSubmitted()
    {
        var requestResult = await Service.AddVIPAsync(vip);

        if (requestResult.Errormessage != null)
        {
            await js.InvokeVoidAsync("alert", $"{requestResult.Errormessage}");
        }
        else
        {
        NavigationManager.NavigateTo("/get-all-vip", true);
        }

    }

    private async Task Logout()
    {
        var customASP = (CustomAuthenticationStateProvider)authStateProvider;
        await customASP.UpdateAuthenticationState(null);
        NavigationManager.NavigateTo("/login-secrete", true);
    }

}