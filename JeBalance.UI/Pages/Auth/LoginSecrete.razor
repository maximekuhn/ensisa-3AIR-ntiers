@page "/login-secrete"
@inject LoginServices Services
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager

<div class="navbar">
    <ul class="ul-navbar">
        <li>
            <a id="home-link" class="active-green" href="/">
                <i class="fas fa-home"></i>
            </a>
        </li>
        <p id="titleLogo"><span id="bleu">JeBalance</span><span id="gris">.gouv</span>.fr</p>
        <img id="logo" src="/favicon.ico" alt="Home"/>
    </ul>
</div>

<h2>Connectez-vous à votre espace</h2>

<div class="login">
    <label>Email</label>
    <input @bind="_model.Email" class="form-control" placeholder="Email"/>

    <label>Mot de passe</label>
    <input @bind="_model.Password" type="password" class="form-control" placeholder="Mot de passe"/>

    <div class="text-center">
        <button @onclick="Authenticate" class="button">Connexion</button>
    </div>
    <br><hr><br>
    <div class="text-center">
        <a class="button-blue" href="/signup-secrete">Inscrivez-vous</a>
    </div>
</div>

@code {
    private readonly LoginModel _model = new();

    private async Task Authenticate()
    {
        var requestResult = await Services.LoginSecreteAsync(_model);
        if (requestResult.Errormessage != null || requestResult.Result == null)
        {
            await js.InvokeVoidAsync("alert", $"Connexion échouée, vérifiez le pseudo et le mot de passe, erreur: {requestResult.Errormessage}");
            return;
        }

        var customASP = (CustomAuthenticationStateProvider)authStateProvider;
        await customASP.UpdateAuthenticationState(requestResult.Result);
        NavigationManager.NavigateTo("/get-all-vip", true);
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is { IsAuthenticated: true } && user.IsInRole("Administrateur"))
        {
            NavigationManager.NavigateTo("/get-all-vip", true);
        }
    }

}